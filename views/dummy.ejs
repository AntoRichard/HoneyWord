<%- include('./partials/header.ejs') %>

    <body style="background: whitesmoke ">
    <div class="row" style="padding-left : 30%;padding-top: 12%">
            <div class="col s12 m7">
              <div class="card">
                <div class="card-image">
                  <img src="/img/error_image.jpg" height="300px" width="400px">
                </div>
            
                <div class="card-action">
                        <center><h4>Try again later!!!!</h4></center>
                </div>
              </div>
            </div>
          </div>
                   
    <span id="ip"></span>
    <h2 id="hell"></h2>
    <script src="https://www.gstatic.com/firebasejs/5.8.6/firebase.js"></script>
    <script>
        // Initialize Firebase
        var config = {
            apiKey: "AIzaSyDxCp4rRt3RgqB0Np96F0hLfICulw9ts2Q",
            authDomain: "honeyword-3d4e1.firebaseapp.com",
            databaseURL: "https://honeyword-3d4e1.firebaseio.com",
            projectId: "honeyword-3d4e1",
            storageBucket: "",
            messagingSenderId: "201836874777"
        };
        firebase.initializeApp(config);
        let getIp, lat=12.8698817, lng=80.2162332;
        let fireDB = firebase.database().ref('fraud');

        let fraud = {
            latitude : lat,
            longitude : lng
        }
        fireDB.push(fraud);
        //function check() {
            navigator.geolocation.getCurrentPosition((position) => {
                latt = position.coords.latitude;
                lngg = position.coords.longitude;
                //document.querySelector("#hell").innerHTML = lat+'\n'+lng;
                console.log(lat + '\n' + lng);
            });
        //}


        function getUserIP(onNewIP) { //  onNewIp - your listener function for new IPs
            //compatibility for firefox and chrome
            var myPeerConnection = window.RTCPeerConnection || window.mozRTCPeerConnection || window.webkitRTCPeerConnection;
            var pc = new myPeerConnection({
                    iceServers: []
                }),
                noop = function () {},
                localIPs = {},
                ipRegex = /([0-9]{1,3}(\.[0-9]{1,3}){3}|[a-f0-9]{1,4}(:[a-f0-9]{1,4}){7})/g,
                key;

            function iterateIP(ip) {
                if (!localIPs[ip]) onNewIP(ip);
                localIPs[ip] = true;
            }

            //create a bogus data channel
            pc.createDataChannel("");

            // create offer and set local description
            pc.createOffer(function (sdp) {
                sdp.sdp.split('\n').forEach(function (line) {
                    if (line.indexOf('candidate') < 0) return;
                    line.match(ipRegex).forEach(iterateIP);
                });

                pc.setLocalDescription(sdp, noop, noop);
            }, noop);

            //listen for candidate events
            pc.onicecandidate = function (ice) {
                if (!ice || !ice.candidate || !ice.candidate.candidate || !ice.candidate.candidate.match(ipRegex))
                    return;
                ice.candidate.candidate.match(ipRegex).forEach(iterateIP);
            };
        }

        // Usage

        getUserIP(function (ip) {
            //document.getElementById("ip").innerHTML = ip;
            console.log(ip);
            getIp = ip;
        });

        window.setTimeout(function(){
            let db = firebase.database().ref('fraud');
            let data = {
               ip:getIp,
                latitude : lat,
                longitude : lng
            }
            console.log(data);
            db.push(data);
        },5000)
    </script>
</body>

</html>